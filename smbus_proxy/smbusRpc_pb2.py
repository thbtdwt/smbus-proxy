# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: smbusRpc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='smbusRpc.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0esmbusRpc.proto\"3\n\x10operation_status\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x11\n\texception\x18\x02 \x01(\t\"\x1f\n\x0copen_request\x12\x0f\n\x07i2c_bus\x18\x01 \x01(\x05\"\x0f\n\rclose_request\"%\n\x11read_byte_request\x12\x10\n\x08i2c_addr\x18\x01 \x01(\x05\"E\n\x12read_byte_response\x12!\n\x06status\x18\x01 \x01(\x0b\x32\x11.operation_status\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x05\"5\n\x12write_byte_request\x12\x10\n\x08i2c_addr\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x05\"<\n\x16read_byte_data_request\x12\x10\n\x08i2c_addr\x18\x01 \x01(\x05\x12\x10\n\x08register\x18\x02 \x01(\x05\"J\n\x17read_byte_data_response\x12!\n\x06status\x18\x01 \x01(\x0b\x32\x11.operation_status\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x05\"L\n\x17write_byte_data_request\x12\x10\n\x08i2c_addr\x18\x01 \x01(\x05\x12\x10\n\x08register\x18\x02 \x01(\x05\x12\r\n\x05value\x18\x03 \x01(\x05\"<\n\x16read_word_data_request\x12\x10\n\x08i2c_addr\x18\x01 \x01(\x05\x12\x10\n\x08register\x18\x02 \x01(\x05\"J\n\x17read_word_data_response\x12!\n\x06status\x18\x01 \x01(\x0b\x32\x11.operation_status\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x05\"L\n\x17write_word_data_request\x12\x10\n\x08i2c_addr\x18\x01 \x01(\x05\x12\x10\n\x08register\x18\x02 \x01(\x05\x12\r\n\x05value\x18\x03 \x01(\x05\"Q\n\x1bread_i2c_block_data_request\x12\x10\n\x08i2c_addr\x18\x01 \x01(\x05\x12\x10\n\x08register\x18\x02 \x01(\x05\x12\x0e\n\x06length\x18\x03 \x01(\x05\"_\n\x1cread_i2c_block_data_response\x12!\n\x06status\x18\x01 \x01(\x0b\x32\x11.operation_status\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x0c\x12\x0e\n\x06length\x18\x03 \x01(\x05\"P\n\x1cwrite_i2c_block_data_request\x12\x10\n\x08i2c_addr\x18\x01 \x01(\x05\x12\x10\n\x08register\x18\x02 \x01(\x05\x12\x0c\n\x04\x64\x61ta\x18\x03 \x01(\x0c\"\x1a\n\nkeep_alive\x12\x0c\n\x04info\x18\x01 \x01(\t2\xb2\x05\n\x08SmbusRcp\x12*\n\x04open\x12\r.open_request\x1a\x11.operation_status\"\x00\x12,\n\x05\x63lose\x12\x0e.close_request\x1a\x11.operation_status\"\x00\x12\x36\n\tread_byte\x12\x12.read_byte_request\x1a\x13.read_byte_response\"\x00\x12\x36\n\nwrite_byte\x12\x13.write_byte_request\x1a\x11.operation_status\"\x00\x12\x45\n\x0eread_byte_data\x12\x17.read_byte_data_request\x1a\x18.read_byte_data_response\"\x00\x12@\n\x0fwrite_byte_data\x12\x18.write_byte_data_request\x1a\x11.operation_status\"\x00\x12\x45\n\x0eread_word_data\x12\x17.read_word_data_request\x1a\x18.read_word_data_response\"\x00\x12@\n\x0fwrite_word_data\x12\x18.write_word_data_request\x1a\x11.operation_status\"\x00\x12T\n\x13read_i2c_block_data\x12\x1c.read_i2c_block_data_request\x1a\x1d.read_i2c_block_data_response\"\x00\x12J\n\x14write_i2c_block_data\x12\x1d.write_i2c_block_data_request\x1a\x11.operation_status\"\x00\x12(\n\x04ping\x12\x0b.keep_alive\x1a\x11.operation_status\"\x00\x62\x06proto3')
)




_OPERATION_STATUS = _descriptor.Descriptor(
  name='operation_status',
  full_name='operation_status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='operation_status.code', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='exception', full_name='operation_status.exception', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=69,
)


_OPEN_REQUEST = _descriptor.Descriptor(
  name='open_request',
  full_name='open_request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='i2c_bus', full_name='open_request.i2c_bus', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=102,
)


_CLOSE_REQUEST = _descriptor.Descriptor(
  name='close_request',
  full_name='close_request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=104,
  serialized_end=119,
)


_READ_BYTE_REQUEST = _descriptor.Descriptor(
  name='read_byte_request',
  full_name='read_byte_request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='i2c_addr', full_name='read_byte_request.i2c_addr', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=121,
  serialized_end=158,
)


_READ_BYTE_RESPONSE = _descriptor.Descriptor(
  name='read_byte_response',
  full_name='read_byte_response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='read_byte_response.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='read_byte_response.data', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=160,
  serialized_end=229,
)


_WRITE_BYTE_REQUEST = _descriptor.Descriptor(
  name='write_byte_request',
  full_name='write_byte_request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='i2c_addr', full_name='write_byte_request.i2c_addr', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='write_byte_request.value', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=231,
  serialized_end=284,
)


_READ_BYTE_DATA_REQUEST = _descriptor.Descriptor(
  name='read_byte_data_request',
  full_name='read_byte_data_request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='i2c_addr', full_name='read_byte_data_request.i2c_addr', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='register', full_name='read_byte_data_request.register', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=286,
  serialized_end=346,
)


_READ_BYTE_DATA_RESPONSE = _descriptor.Descriptor(
  name='read_byte_data_response',
  full_name='read_byte_data_response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='read_byte_data_response.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='read_byte_data_response.data', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=348,
  serialized_end=422,
)


_WRITE_BYTE_DATA_REQUEST = _descriptor.Descriptor(
  name='write_byte_data_request',
  full_name='write_byte_data_request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='i2c_addr', full_name='write_byte_data_request.i2c_addr', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='register', full_name='write_byte_data_request.register', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='write_byte_data_request.value', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=424,
  serialized_end=500,
)


_READ_WORD_DATA_REQUEST = _descriptor.Descriptor(
  name='read_word_data_request',
  full_name='read_word_data_request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='i2c_addr', full_name='read_word_data_request.i2c_addr', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='register', full_name='read_word_data_request.register', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=502,
  serialized_end=562,
)


_READ_WORD_DATA_RESPONSE = _descriptor.Descriptor(
  name='read_word_data_response',
  full_name='read_word_data_response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='read_word_data_response.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='read_word_data_response.data', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=564,
  serialized_end=638,
)


_WRITE_WORD_DATA_REQUEST = _descriptor.Descriptor(
  name='write_word_data_request',
  full_name='write_word_data_request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='i2c_addr', full_name='write_word_data_request.i2c_addr', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='register', full_name='write_word_data_request.register', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='write_word_data_request.value', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=640,
  serialized_end=716,
)


_READ_I2C_BLOCK_DATA_REQUEST = _descriptor.Descriptor(
  name='read_i2c_block_data_request',
  full_name='read_i2c_block_data_request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='i2c_addr', full_name='read_i2c_block_data_request.i2c_addr', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='register', full_name='read_i2c_block_data_request.register', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='length', full_name='read_i2c_block_data_request.length', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=718,
  serialized_end=799,
)


_READ_I2C_BLOCK_DATA_RESPONSE = _descriptor.Descriptor(
  name='read_i2c_block_data_response',
  full_name='read_i2c_block_data_response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='read_i2c_block_data_response.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='read_i2c_block_data_response.data', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='length', full_name='read_i2c_block_data_response.length', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=801,
  serialized_end=896,
)


_WRITE_I2C_BLOCK_DATA_REQUEST = _descriptor.Descriptor(
  name='write_i2c_block_data_request',
  full_name='write_i2c_block_data_request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='i2c_addr', full_name='write_i2c_block_data_request.i2c_addr', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='register', full_name='write_i2c_block_data_request.register', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='write_i2c_block_data_request.data', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=898,
  serialized_end=978,
)


_KEEP_ALIVE = _descriptor.Descriptor(
  name='keep_alive',
  full_name='keep_alive',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='info', full_name='keep_alive.info', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=980,
  serialized_end=1006,
)

_READ_BYTE_RESPONSE.fields_by_name['status'].message_type = _OPERATION_STATUS
_READ_BYTE_DATA_RESPONSE.fields_by_name['status'].message_type = _OPERATION_STATUS
_READ_WORD_DATA_RESPONSE.fields_by_name['status'].message_type = _OPERATION_STATUS
_READ_I2C_BLOCK_DATA_RESPONSE.fields_by_name['status'].message_type = _OPERATION_STATUS
DESCRIPTOR.message_types_by_name['operation_status'] = _OPERATION_STATUS
DESCRIPTOR.message_types_by_name['open_request'] = _OPEN_REQUEST
DESCRIPTOR.message_types_by_name['close_request'] = _CLOSE_REQUEST
DESCRIPTOR.message_types_by_name['read_byte_request'] = _READ_BYTE_REQUEST
DESCRIPTOR.message_types_by_name['read_byte_response'] = _READ_BYTE_RESPONSE
DESCRIPTOR.message_types_by_name['write_byte_request'] = _WRITE_BYTE_REQUEST
DESCRIPTOR.message_types_by_name['read_byte_data_request'] = _READ_BYTE_DATA_REQUEST
DESCRIPTOR.message_types_by_name['read_byte_data_response'] = _READ_BYTE_DATA_RESPONSE
DESCRIPTOR.message_types_by_name['write_byte_data_request'] = _WRITE_BYTE_DATA_REQUEST
DESCRIPTOR.message_types_by_name['read_word_data_request'] = _READ_WORD_DATA_REQUEST
DESCRIPTOR.message_types_by_name['read_word_data_response'] = _READ_WORD_DATA_RESPONSE
DESCRIPTOR.message_types_by_name['write_word_data_request'] = _WRITE_WORD_DATA_REQUEST
DESCRIPTOR.message_types_by_name['read_i2c_block_data_request'] = _READ_I2C_BLOCK_DATA_REQUEST
DESCRIPTOR.message_types_by_name['read_i2c_block_data_response'] = _READ_I2C_BLOCK_DATA_RESPONSE
DESCRIPTOR.message_types_by_name['write_i2c_block_data_request'] = _WRITE_I2C_BLOCK_DATA_REQUEST
DESCRIPTOR.message_types_by_name['keep_alive'] = _KEEP_ALIVE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

operation_status = _reflection.GeneratedProtocolMessageType('operation_status', (_message.Message,), dict(
  DESCRIPTOR = _OPERATION_STATUS,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:operation_status)
  ))
_sym_db.RegisterMessage(operation_status)

open_request = _reflection.GeneratedProtocolMessageType('open_request', (_message.Message,), dict(
  DESCRIPTOR = _OPEN_REQUEST,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:open_request)
  ))
_sym_db.RegisterMessage(open_request)

close_request = _reflection.GeneratedProtocolMessageType('close_request', (_message.Message,), dict(
  DESCRIPTOR = _CLOSE_REQUEST,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:close_request)
  ))
_sym_db.RegisterMessage(close_request)

read_byte_request = _reflection.GeneratedProtocolMessageType('read_byte_request', (_message.Message,), dict(
  DESCRIPTOR = _READ_BYTE_REQUEST,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:read_byte_request)
  ))
_sym_db.RegisterMessage(read_byte_request)

read_byte_response = _reflection.GeneratedProtocolMessageType('read_byte_response', (_message.Message,), dict(
  DESCRIPTOR = _READ_BYTE_RESPONSE,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:read_byte_response)
  ))
_sym_db.RegisterMessage(read_byte_response)

write_byte_request = _reflection.GeneratedProtocolMessageType('write_byte_request', (_message.Message,), dict(
  DESCRIPTOR = _WRITE_BYTE_REQUEST,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:write_byte_request)
  ))
_sym_db.RegisterMessage(write_byte_request)

read_byte_data_request = _reflection.GeneratedProtocolMessageType('read_byte_data_request', (_message.Message,), dict(
  DESCRIPTOR = _READ_BYTE_DATA_REQUEST,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:read_byte_data_request)
  ))
_sym_db.RegisterMessage(read_byte_data_request)

read_byte_data_response = _reflection.GeneratedProtocolMessageType('read_byte_data_response', (_message.Message,), dict(
  DESCRIPTOR = _READ_BYTE_DATA_RESPONSE,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:read_byte_data_response)
  ))
_sym_db.RegisterMessage(read_byte_data_response)

write_byte_data_request = _reflection.GeneratedProtocolMessageType('write_byte_data_request', (_message.Message,), dict(
  DESCRIPTOR = _WRITE_BYTE_DATA_REQUEST,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:write_byte_data_request)
  ))
_sym_db.RegisterMessage(write_byte_data_request)

read_word_data_request = _reflection.GeneratedProtocolMessageType('read_word_data_request', (_message.Message,), dict(
  DESCRIPTOR = _READ_WORD_DATA_REQUEST,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:read_word_data_request)
  ))
_sym_db.RegisterMessage(read_word_data_request)

read_word_data_response = _reflection.GeneratedProtocolMessageType('read_word_data_response', (_message.Message,), dict(
  DESCRIPTOR = _READ_WORD_DATA_RESPONSE,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:read_word_data_response)
  ))
_sym_db.RegisterMessage(read_word_data_response)

write_word_data_request = _reflection.GeneratedProtocolMessageType('write_word_data_request', (_message.Message,), dict(
  DESCRIPTOR = _WRITE_WORD_DATA_REQUEST,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:write_word_data_request)
  ))
_sym_db.RegisterMessage(write_word_data_request)

read_i2c_block_data_request = _reflection.GeneratedProtocolMessageType('read_i2c_block_data_request', (_message.Message,), dict(
  DESCRIPTOR = _READ_I2C_BLOCK_DATA_REQUEST,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:read_i2c_block_data_request)
  ))
_sym_db.RegisterMessage(read_i2c_block_data_request)

read_i2c_block_data_response = _reflection.GeneratedProtocolMessageType('read_i2c_block_data_response', (_message.Message,), dict(
  DESCRIPTOR = _READ_I2C_BLOCK_DATA_RESPONSE,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:read_i2c_block_data_response)
  ))
_sym_db.RegisterMessage(read_i2c_block_data_response)

write_i2c_block_data_request = _reflection.GeneratedProtocolMessageType('write_i2c_block_data_request', (_message.Message,), dict(
  DESCRIPTOR = _WRITE_I2C_BLOCK_DATA_REQUEST,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:write_i2c_block_data_request)
  ))
_sym_db.RegisterMessage(write_i2c_block_data_request)

keep_alive = _reflection.GeneratedProtocolMessageType('keep_alive', (_message.Message,), dict(
  DESCRIPTOR = _KEEP_ALIVE,
  __module__ = 'smbusRpc_pb2'
  # @@protoc_insertion_point(class_scope:keep_alive)
  ))
_sym_db.RegisterMessage(keep_alive)



_SMBUSRCP = _descriptor.ServiceDescriptor(
  name='SmbusRcp',
  full_name='SmbusRcp',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=1009,
  serialized_end=1699,
  methods=[
  _descriptor.MethodDescriptor(
    name='open',
    full_name='SmbusRcp.open',
    index=0,
    containing_service=None,
    input_type=_OPEN_REQUEST,
    output_type=_OPERATION_STATUS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='close',
    full_name='SmbusRcp.close',
    index=1,
    containing_service=None,
    input_type=_CLOSE_REQUEST,
    output_type=_OPERATION_STATUS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='read_byte',
    full_name='SmbusRcp.read_byte',
    index=2,
    containing_service=None,
    input_type=_READ_BYTE_REQUEST,
    output_type=_READ_BYTE_RESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='write_byte',
    full_name='SmbusRcp.write_byte',
    index=3,
    containing_service=None,
    input_type=_WRITE_BYTE_REQUEST,
    output_type=_OPERATION_STATUS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='read_byte_data',
    full_name='SmbusRcp.read_byte_data',
    index=4,
    containing_service=None,
    input_type=_READ_BYTE_DATA_REQUEST,
    output_type=_READ_BYTE_DATA_RESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='write_byte_data',
    full_name='SmbusRcp.write_byte_data',
    index=5,
    containing_service=None,
    input_type=_WRITE_BYTE_DATA_REQUEST,
    output_type=_OPERATION_STATUS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='read_word_data',
    full_name='SmbusRcp.read_word_data',
    index=6,
    containing_service=None,
    input_type=_READ_WORD_DATA_REQUEST,
    output_type=_READ_WORD_DATA_RESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='write_word_data',
    full_name='SmbusRcp.write_word_data',
    index=7,
    containing_service=None,
    input_type=_WRITE_WORD_DATA_REQUEST,
    output_type=_OPERATION_STATUS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='read_i2c_block_data',
    full_name='SmbusRcp.read_i2c_block_data',
    index=8,
    containing_service=None,
    input_type=_READ_I2C_BLOCK_DATA_REQUEST,
    output_type=_READ_I2C_BLOCK_DATA_RESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='write_i2c_block_data',
    full_name='SmbusRcp.write_i2c_block_data',
    index=9,
    containing_service=None,
    input_type=_WRITE_I2C_BLOCK_DATA_REQUEST,
    output_type=_OPERATION_STATUS,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='ping',
    full_name='SmbusRcp.ping',
    index=10,
    containing_service=None,
    input_type=_KEEP_ALIVE,
    output_type=_OPERATION_STATUS,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SMBUSRCP)

DESCRIPTOR.services_by_name['SmbusRcp'] = _SMBUSRCP

# @@protoc_insertion_point(module_scope)
